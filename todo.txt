Le nom in-game est pas le bon
Les fists damage font pas dégats
l'état de l'arme n'est pas correctement partagé entre les clients

private boolean shouldDropCrate(Plane plane, EntityManager entityManager, byte[][] world, long currentTime) {
    int worldWidth = WorldGenerator.getWorldWidth();
    int worldHeight = WorldGenerator.getWorldHeight();

    // Calculate the plane's progress into the map as a percentage
    int planeX = plane.getX();
    int planeY = plane.getY();
    double xProgress = (double) planeX / worldWidth;
    double yProgress = (double) planeY / worldHeight;

    // Plane must have entered 20% into the map before considering delay
    if (xProgress < 0.2 || xProgress > 0.8 || yProgress < 0.2 || yProgress > 0.8) {
        return false;
    }

    // Calculate delay based on the world size
    long delay = (long) ((worldWidth + worldHeight) * DELAY_FACTOR);
    if ((currentTime - dropStartTime) < delay) {
        return false;
    }

    // Ensure plane is within bounds (to avoid dropping crates too close to edges)
    int mapMarginX = worldWidth / 10;
    int mapMarginY = worldHeight / 10;
    boolean withinBounds = planeX > mapMarginX && planeX < (worldWidth - mapMarginX)
            && planeY > mapMarginY && planeY < (worldHeight - mapMarginY);

    // Ensure the plane is above a grass tile
    int planeTileX = planeX / WorldGenerator.TILE_SIZE;
    int planeTileY = planeY / WorldGenerator.TILE_SIZE;
    boolean aboveGrass = (planeTileX >= 0 && planeTileX < world.length) &&
            (planeTileY >= 0 && planeTileY < world[0].length) &&
            world[planeTileX][planeTileY] == WorldGenerator.GRASS;

    // Ensure the drop area is not colliding with any static entities
    boolean noCollision = !isCollidingWithStaticEntities(planeX, planeY, entityManager);

    return withinBounds && aboveGrass && noCollision;
}
